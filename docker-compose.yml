version: '3'

services:
  streamer-binance:
    build:
      context: ./streamer
      dockerfile: Dockerfile
    links:
      - rabbitmq
    restart: on-failure
    container_name: eq-trader-streamer-binance
    ports:
      - '8080:8080'
    env_file: .binancesecrets
    environment:
      - MARKET_ID=ETHBTC
      - DATAPOINTS=["L2_ORDER_BOOK, MY_TRADES"]
      - NODE_ENV=development
      - EXCHANGE=binance
      - WEBSOCKET=true
      - OUTGOING_WEBSOCKET_PORT=8080
      - RABBIT_MQ_ADDR=amqp://rabbitmq:5672

  streamer-kraken:
    build:
      context: ./streamer
      dockerfile: Dockerfile
    links:
      - rabbitmq
    restart: on-failure
    container_name: eq-trader-streamer-kraken
    ports:
      - '8081:8081'
    env_file: .krakensecrets
    environment:
      - MARKET_ID=ETH/BTC
      - DATAPOINTS=["L2_ORDER_BOOK, MY_TRADES"]
      - NODE_ENV=development
      - EXCHANGE=kraken
      - WEBSOCKET=false
      - OUTGOING_WEBSOCKET_PORT=8081
      - RABBIT_MQ_ADDR=amqp://rabbitmq:5672

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    links:
      - streamer-binance
      - streamer-kraken
    restart: on-failure
    container_name: eq-trader-dashboard
    ports:
      - '3001:3000'
    environment:
      - KRAKEN_ADDR=ws://streamer-kraken:8080
      - BINANCE_ADDR=ws://streamer-binance:8080
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=development

  predictor:
    build:
      context: ./predictor
      dockerfile: Dockerfile
    links:
      - rabbitmq
      - redis
    restart: on-failure
    container_name: eq-trader-predictor
    environment:
      - RABBIT_MQ_HOST=rabbitmq
      - RABBIT_MQ_PORT=5672

  executor-binance:
    build:
      context: ./executor
      dockerfile: Dockerfile
    links:
      - rabbitmq
      - redis
    restart: on-failure
    container_name: eq-trader-executor-binance
    env_file: .binancesecrets
    environment:
      - MARKET_ID=ETHBTC
      - NODE_ENV=development
      - JOB_QUEUE=binance-jobs
      - RABBIT_MQ_ADDR=amqp://rabbitmq:5672
      - REDIS_ADDR=redis:6379

  executor-kraken:
    build:
      context: ./executor
      dockerfile: Dockerfile
    links:
      - rabbitmq
      - redis
    restart: on-failure
    container_name: eq-trader-executor-kraken
    env_file: .krakensecrets
    environment:
      - MARKET_ID=ETH/BTC
      - NODE_ENV=development
      - JOB_QUEUE=kraken-jobs
      - RABBIT_MQ_ADDR=amqp://rabbitmq:5672
      - REDIS_ADDR=redis:6379

  rabbitmq:
    image: rabbitmq:alpine
    hostname: rabbitmq
    container_name: eq-trader-rabbitmq
    restart: on-failure
    ports:
      - "5672:5672"

  redis:
    image: redis:alpine
    hostname: redis
    container_name: eq-trader-redis
    restart: on-failure
    ports:
      - "6379:6379"
